[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "trustyai"
version = "2.0.0a1"
description = "TrustyAI Python SDK"
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
authors = [
    {name = "Rui Vieira", email = "rui@redhat.com"}
]
dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scikit-learn>=1.0.0",
    "click>=8.0.0",
    "rich>=10.0.0",
    "pyyaml>=6.0",
]

[project.urls]
Repository = ""

[project.scripts]
trustyai = "trustyai.cli:main"

[project.optional-dependencies]
eval = [
    "lm-eval @ git+https://github.com/opendatahub-io/lm-evaluation-harness.git@release-0.4.8",
    "kubernetes>=28.1.0"
]
all = [
    "lm-eval @ git+https://github.com/opendatahub-io/lm-evaluation-harness.git@release-0.4.8",
    "kubernetes>=28.1.0"
]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
    "types-PyYAML>=6.0.0",
    "build>=1.0.0",
]

[tool.hatch.build.targets.wheel]
packages = ["trustyai"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.ruff]
target-version = "py38"
line-length = 100
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "YTT", # flake8-2020
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "T20", # flake8-print
]
ignore = [
    "E203",  # Whitespace before ':'
    "E501",  # Line too long (handled by formatter)
]

[tool.ruff.isort]
known-first-party = ["trustyai"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"
skip-magic-trailing-comma = false

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
python_classes = "Test*"
addopts = "--cov=trustyai --cov-report=term-missing" 