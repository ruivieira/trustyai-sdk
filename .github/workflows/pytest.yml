name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Create virtual environment
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv
        python -m venv .venv

    - name: Install dependencies
      run: |
        source .venv/bin/activate
        if [ -f pyproject.toml ]; then
          uv pip install -e ".[dev]"
        fi

    - name: Run pytest
      run: |
        source .venv/bin/activate
        python -m pytest tests/ -v --tb=short
      
    - name: Run pytest with coverage
      run: |
        source .venv/bin/activate
        python -m pytest tests/ --cov=trustyai --cov-report=xml --cov-report=term
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
      continue-on-error: true 